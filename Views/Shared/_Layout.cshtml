<!-- Views/Shared/_Layout.cshtml -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Rent Management System</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#3b82f6',
                        secondary: '#64748B',
                        success: '#22c55e',
                        warning: '#eab308',
                        danger: '#ef4444',
                        admin: '#dc2626',
                        employee: '#2563eb',
                        vendor: '#d97706'
                    },
                    borderRadius: {
                        'button': '8px'
                    },
                    fontFamily: {
                        sans: ['Inter', 'system-ui', 'sans-serif'],
                    }
                }
            }
        }
    </script>
    <style>
        .table-row:hover {
            background-color: #f8fafc;
        }

        .sortable {
            cursor: pointer;
        }

            .sortable:hover {
                background-color: #f1f5f9;
            }

        .sidebar-overlay {
            backdrop-filter: blur(4px);
        }

        /* Sidebar animations */
        .sidebar-expanded {
            width: 16rem;
        }

        .sidebar-collapsed {
            width: 4rem;
        }

        .sidebar-transition {
            transition: width 0.3s ease-in-out;
        }

        /* Dropdown animations */
        .dropdown-enter {
            opacity: 0;
            transform: translateY(-10px);
        }

        .dropdown-enter-active {
            opacity: 1;
            transform: translateY(0);
            transition: all 0.2s ease-out;
        }

        .dropdown-exit {
            opacity: 1;
            transform: translateY(0);
        }

        .dropdown-exit-active {
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.2s ease-in;
        }

        /* Role badge colors */
        .role-admin {
            background-color: #fee2e2;
            color: #dc2626;
        }

        .role-employee {
            background-color: #dbeafe;
            color: #2563eb;
        }

        .role-vendor {
            background-color: #fed7aa;
            color: #d97706;
        }
    </style>
</head>

<body class="bg-gray-50 font-sans">
    <div class="flex min-h-screen relative">
        <!-- Mobile Sidebar Overlay -->
        <div id="sidebarOverlay" class="fixed inset-0 bg-black bg-opacity-50 sidebar-overlay z-40 hidden lg:hidden"></div>

        <!-- Left Sidebar -->
        <aside id="sidebar" class="fixed lg:static inset-y-0 left-0 z-50 bg-white border-r border-gray-200 flex flex-col transform -translate-x-full lg:translate-x-0 transition-transform duration-300 ease-in-out sidebar-expanded sidebar-transition">
            <div class="p-4 border-b border-gray-200 flex items-center justify-between">
                <div id="sidebarLogo" class="flex items-center transition-opacity duration-300">
                    <div class="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center text-white font-bold text-sm mr-3">
                        RM
                    </div>
                    <span class="sidebar-text font-semibold text-gray-800">Rent Management</span>
                </div>
                <button id="closeSidebar" class="lg:hidden text-gray-600 hover:text-gray-900">
                    <i class="ri-close-line text-xl"></i>
                </button>
                <!-- Desktop Toggle Button -->
                <button id="toggleSidebarDesktop" class="hidden lg:block text-gray-600 hover:text-gray-900">
                    <i class="ri-menu-fold-line text-xl"></i>
                </button>
            </div>

            <nav class="flex-1 p-4 overflow-y-auto">
                <!-- Dashboard -->
                <a asp-controller="Account" asp-action="Dashboard"
                   class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                   data-nav="dashboard">
                    <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                        <i class="ri-dashboard-line"></i>
                    </div>
                    <span class="sidebar-text">Dashboard</span>
                </a>

                @if (User.Identity.IsAuthenticated)
                {
                    <!-- Administration Section (Admin Only) -->
                    @if (User.IsInRole("Admin"))
                    {
                        <div class="mt-4 mb-2">
                            <span class="sidebar-text text-xs font-medium text-gray-500 uppercase tracking-wide px-3">Administration</span>
                        </div>

                        <a asp-controller="Admin" asp-action="UserManagement"
                           class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                           data-nav="user-management">
                            <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                                <i class="ri-team-line"></i>
                            </div>
                            <span class="sidebar-text">User Management</span>
                        </a>


                        <a asp-controller="Admin" asp-action="Dashboard"
                           class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                           data-nav="admin-panel">
                            <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                                <i class="ri-settings-3-line"></i>
                            </div>
                            <span class="sidebar-text">Admin Panel</span>
                        </a>


                      @*   <a asp-controller="Admin" asp-action="UserRoles"
                           class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                           data-nav="user-roles">
                            <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                                <i class="ri-user-settings-line"></i>
                            </div>
                            <span class="sidebar-text">User Roles</span>
                        </a> *@
                    }

                    <!-- Management Modules -->
                    <div class="mt-4 mb-2">
                        <span class="sidebar-text text-xs font-medium text-gray-500 uppercase tracking-wide px-3">Management</span>
                    </div>

                    @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                    {
                        <a asp-controller="Employee" asp-action="Index"
                           class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                           data-nav="employee-management">
                            <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                                <i class="ri-user-line"></i>
                            </div>
                            <span class="sidebar-text">Employee Management</span>
                        </a>

                       @*  <a asp-controller="Employee" asp-action="Create"
                           class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                           data-nav="add-employee">
                            <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                                <i class="ri-user-add-2-line"></i>
                            </div>
                            <span class="sidebar-text">Add Employee</span>
                        </a>
 *@                    }

                    <a asp-controller="Vendor" asp-action="Index"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="vendor-management">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-store-line"></i>
                        </div>
                        <span class="sidebar-text">Owner Management</span>
                    </a>

                  @*   <a asp-controller="Vendor" asp-action="Create"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="add-vendor">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-store-add-line"></i>
                        </div>
                        <span class="sidebar-text">Add Vendor</span>
                    </a> *@

                    <a asp-controller="Lease" asp-action="Index"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="lease-management">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-file-list-line"></i>
                        </div>
                        <span class="sidebar-text">Lease Management</span>
                    </a>

                  @*   <a asp-controller="Lease" asp-action="Create"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="create-lease">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-file-add-line"></i>
                        </div>
                        <span class="sidebar-text">Create Lease</span>
                    </a> *@

                   @*  <a asp-controller="Property" asp-action="Index"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="property-management">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-building-line"></i>
                        </div>
                        <span class="sidebar-text">Property Management</span>
                    </a> *@

                    <!-- Financial Section -->
                    <div class="mt-4 mb-2">
                        <span class="sidebar-text text-xs font-medium text-gray-500 uppercase tracking-wide px-3">Financial</span>
                    </div>

                    <a asp-controller="MonthlyRentPayment" asp-action="Index"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="monthly-rent">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-money-dollar-circle-line"></i>
                        </div>
                        <span class="sidebar-text">Monthly Rent Payment</span>
                    </a>

                    <a asp-controller="BrokeragePayment" asp-action="Index"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="brokerage-payment">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-exchange-dollar-line"></i>
                        </div>
                        <span class="sidebar-text">Brokerage Payment</span>
                    </a>

                    <a asp-controller="SecurityDeposit" asp-action="Index"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="security-deposit">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-safe-2-line"></i>
                        </div>
                        <span class="sidebar-text">Security Deposit</span>
                    </a>

                
                    <!-- Reports Section -->
                    <div class="mt-4 mb-2">
                        <span class="sidebar-text text-xs font-medium text-gray-500 uppercase tracking-wide px-3">Reports & Analytics</span>
                    </div>

                    <a asp-controller="MISReport" asp-action="Index"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="mis-reports">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-file-chart-line"></i>
                        </div>
                        <span class="sidebar-text">MIS Reports</span>
                    </a>

                    @* <a asp-controller="Reports" asp-action="Financial"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="financial-reports">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-funds-line"></i>
                        </div>
                        <span class="sidebar-text">Financial Reports</span>
                    </a> *@

                    <!-- Settings Section -->
                    <div class="mt-4 mb-2">
                        <span class="sidebar-text text-xs font-medium text-gray-500 uppercase tracking-wide px-3">Settings</span>
                    </div>

                    <a asp-controller="Account" asp-action="Profile"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="my-profile">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-user-3-line"></i>
                        </div>
                        <span class="sidebar-text">My Profile</span>
                    </a>


                    <a asp-controller="Account" asp-action="ChangePassword"
                       class="sidebar-item flex items-center px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg mb-1 text-sm transition-colors duration-200"
                       data-nav="change-password">
                        <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                            <i class="ri-lock-password-line"></i>
                        </div>
                        <span class="sidebar-text">Change Password</span>
                    </a>

                }
            </nav>

            <!-- Sidebar Footer -->
            <div class="p-4 border-t border-gray-200">
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="flex items-center space-x-3 mb-3">
                        <div class="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center text-white font-medium text-xs">
                            @(User.FindFirst("FullName")?.Value?.Split(' ').Select(n => n.FirstOrDefault()).Take(2).Aggregate("", (acc, c) => acc + c) ?? User.Identity?.Name?.Substring(0, 2).ToUpper() ?? "U")
                        </div>
                        <div class="sidebar-text">
                            <div class="text-sm font-medium text-gray-900 truncate">@(User.FindFirst("FullName")?.Value ?? User.Identity?.Name ?? "User")</div>
                            <div class="text-xs text-gray-500">
                                <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium role-@(User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value?.ToLower() ?? "employee")">
                                    @(User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value ?? "User")
                                </span>
                            </div>
                        </div>
                    </div>

                    <form asp-controller="Account" asp-action="Logout" method="post" class="w-full">
                        <button type="submit" class="sidebar-item w-full flex items-center px-3 py-2 text-red-600 hover:bg-red-50 rounded-lg text-sm transition-colors duration-200">
                            <div class="w-5 h-5 flex items-center justify-center mr-3 flex-shrink-0">
                                <i class="ri-logout-box-r-line"></i>
                            </div>
                            <span class="sidebar-text">Sign Out</span>
                        </button>
                    </form>
                }
                else
                {
                    <div class="space-y-2">
                        <a asp-controller="Account" asp-action="Login"
                           class="sidebar-item w-full flex items-center justify-center px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors duration-200">
                            <span class="sidebar-text">Sign In</span>
                        </a>
                        <a asp-controller="Account" asp-action="Register"
                           class="sidebar-item w-full flex items-center justify-center px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors duration-200">
                            <span class="sidebar-text">Sign Up</span>
                        </a>
                    </div>
                }
            </div>
        </aside>

        <!-- Main Content -->
        <main class="flex-1 min-w-0">
            <!-- Header Section -->
            <header class="bg-white border-b border-gray-200 sticky top-0 z-30">
                <div class="flex items-center justify-between px-4 lg:px-6 py-3 lg:py-4">
                    <div class="flex items-center min-w-0">
                        <button id="openSidebar" class="lg:hidden !rounded-button text-gray-600 hover:text-gray-900 mr-3">
                            <div class="w-8 h-8 flex items-center justify-center">
                                <i class="ri-menu-line"></i>
                            </div>
                        </button>
                        <h1 class="text-lg lg:text-xl font-semibold text-gray-800 truncate">@ViewData["Title"]</h1>
                    </div>

                    <div class="flex items-center space-x-2 lg:space-x-4">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <!-- Notifications -->
                            <button class="!rounded-button relative p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg">
                                <i class="ri-notification-line text-xl"></i>
                                <span class="absolute top-1 right-1 w-2 h-2 bg-red-500 rounded-full"></span>
                            </button>

                            <!-- User Dropdown -->
                            <div class="relative" x-data="{ open: false }">
                                <button class="flex items-center space-x-2 px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors duration-200"
                                        onclick="toggleUserDropdown()"
                                        id="userMenuButton">
                                    <div class="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center text-white font-medium text-sm">
                                        @(User.FindFirst("FullName")?.Value?.Split(' ').Select(n => n.FirstOrDefault()).Take(2).Aggregate("", (acc, c) => acc + c) ?? User.Identity?.Name?.Substring(0, 2).ToUpper() ?? "U")
                                    </div>
                                    <div class="hidden sm:block text-left">
                                        <div class="text-sm font-medium text-gray-900">@(User.FindFirst("FullName")?.Value ?? User.Identity?.Name ?? "User")</div>
                                        <div class="text-xs text-gray-500">
                                            <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium role-@(User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value?.ToLower() ?? "employee")">
                                                @(User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value ?? "User")
                                            </span>
                                        </div>
                                    </div>
                                    <i class="ri-arrow-down-s-line text-gray-400"></i>
                                </button>

                                <!-- Dropdown Menu -->
                                <div id="userDropdown" class="hidden absolute right-0 mt-2 w-64 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-50">
                                    <!-- User Info -->
                                    <div class="px-4 py-3 border-b border-gray-100">
                                        <div class="flex items-center space-x-3">
                                            <div class="w-10 h-10 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center text-white font-medium">
                                                @(User.FindFirst("FullName")?.Value?.Split(' ').Select(n => n.FirstOrDefault()).Take(2).Aggregate("", (acc, c) => acc + c) ?? User.Identity?.Name?.Substring(0, 2).ToUpper() ?? "U")
                                            </div>
                                            <div>
                                                <div class="font-medium text-gray-900">@(User.FindFirst("FullName")?.Value ?? User.Identity?.Name ?? "User")</div>
                                                <div class="text-sm text-gray-500">@(User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value ?? "")</div>
                                                <div class="text-xs">
                                                    <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium role-@(User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value?.ToLower() ?? "employee")">
                                                        <i class="ri-user-line mr-1"></i>
                                                        @(User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value ?? "User")
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Menu Items -->
                                    <div class="py-1">
                                        <a asp-controller="Account" asp-action="Profile" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                            <i class="ri-user-line mr-3 text-gray-400"></i>
                                            My Profile
                                        </a>
                                        <a asp-controller="Account" asp-action="Dashboard" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                            <i class="ri-dashboard-line mr-3 text-gray-400"></i>
                                            Dashboard
                                        </a>
                                        <a asp-controller="Account" asp-action="ChangePassword" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                            <i class="ri-lock-line mr-3 text-gray-400"></i>
                                            Change Password
                                        </a>

                                        @if (User.IsInRole("Admin"))
                                        {
                                            <div class="border-t border-gray-100 my-1"></div>
                                            <a asp-controller="Admin" asp-action="Dashboard" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                                <i class="ri-settings-3-line mr-3 text-gray-400"></i>
                                                Admin Settings
                                            </a>
                                            <a asp-controller="Admin" asp-action="UserManagement" class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                                <i class="ri-team-line mr-3 text-gray-400"></i>
                                                Manage Users
                                            </a>
                                        }

                                        <div class="border-t border-gray-100 my-1"></div>
                                        <form asp-controller="Account" asp-action="Logout" method="post" class="block">
                                            <button type="submit" class="flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50">
                                                <i class="ri-logout-box-r-line mr-3 text-red-500"></i>
                                                Sign Out
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <!-- Not Authenticated -->
                            <div class="flex items-center space-x-2">
                                <a asp-controller="Account" asp-action="Login" class="px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-900">
                                    Sign In
                                </a>
                                <a asp-controller="Account" asp-action="Register" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg">
                                    Sign Up
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </header>

            <!-- Alert Messages -->
            <div class="px-4 lg:px-6 py-2">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4 rounded-r-lg" role="alert">
                        <div class="flex items-center">
                            <i class="ri-check-circle-line mr-2"></i>
                            <span>@TempData["SuccessMessage"]</span>
                            <button onclick="this.parentElement.parentElement.remove()" class="ml-auto text-green-500 hover:text-green-700">
                                <i class="ri-close-line"></i>
                            </button>
                        </div>
                    </div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4 rounded-r-lg" role="alert">
                        <div class="flex items-center">
                            <i class="ri-error-warning-line mr-2"></i>
                            <span>@TempData["ErrorMessage"]</span>
                            <button onclick="this.parentElement.parentElement.remove()" class="ml-auto text-red-500 hover:text-red-700">
                                <i class="ri-close-line"></i>
                            </button>
                        </div>
                    </div>
                }
                @if (TempData["InfoMessage"] != null)
                {
                    <div class="bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4 mb-4 rounded-r-lg" role="alert">
                        <div class="flex items-center">
                            <i class="ri-information-line mr-2"></i>
                            <span>@TempData["InfoMessage"]</span>
                            <button onclick="this.parentElement.parentElement.remove()" class="ml-auto text-blue-500 hover:text-blue-700">
                                <i class="ri-close-line"></i>
                            </button>
                        </div>
                    </div>
                }
            </div>

            <!-- Main Content Area -->
            <div class="px-4 lg:px-6 pb-6">
                @RenderBody()
            </div>
        </main>
    </div>

    <script>
        // Sidebar functionality
        const sidebar = document.getElementById('sidebar');
        const sidebarOverlay = document.getElementById('sidebarOverlay');
        const openSidebarBtn = document.getElementById('openSidebar');
        const closeSidebarBtn = document.getElementById('closeSidebar');
        const toggleSidebarDesktopBtn = document.getElementById('toggleSidebarDesktop');
        const sidebarLogo = document.getElementById('sidebarLogo');
        const sidebarTexts = document.querySelectorAll('.sidebar-text');

        let sidebarCollapsed = false;

        function openSidebar() {
            sidebar.classList.remove('-translate-x-full');
            sidebarOverlay.classList.remove('hidden');
            document.body.classList.add('overflow-hidden');
        }

        function closeSidebar() {
            sidebar.classList.add('-translate-x-full');
            sidebarOverlay.classList.add('hidden');
            document.body.classList.remove('overflow-hidden');
        }

        function toggleSidebarDesktop() {
            sidebarCollapsed = !sidebarCollapsed;

            if (sidebarCollapsed) {
                sidebar.classList.remove('sidebar-expanded');
                sidebar.classList.add('sidebar-collapsed');
                sidebarLogo.classList.add('opacity-0');
                sidebarTexts.forEach(text => text.classList.add('opacity-0', 'w-0', 'overflow-hidden'));
                toggleSidebarDesktopBtn.querySelector('i').className = 'ri-menu-unfold-line text-xl';
            } else {
                sidebar.classList.remove('sidebar-collapsed');
                sidebar.classList.add('sidebar-expanded');
                sidebarLogo.classList.remove('opacity-0');
                sidebarTexts.forEach(text => text.classList.remove('opacity-0', 'w-0', 'overflow-hidden'));
                toggleSidebarDesktopBtn.querySelector('i').className = 'ri-menu-fold-line text-xl';
            }
        }

        // User dropdown functionality
        function toggleUserDropdown() {
            const dropdown = document.getElementById('userDropdown');
            dropdown.classList.toggle('hidden');
        }

        // Close dropdown when clicking outside
        document.addEventListener('click', function (event) {
            const userMenuButton = document.getElementById('userMenuButton');
            const userDropdown = document.getElementById('userDropdown');

            if (!userMenuButton.contains(event.target) && !userDropdown.contains(event.target)) {
                userDropdown.classList.add('hidden');
            }
        });

        // Event listeners
        if (openSidebarBtn) openSidebarBtn.addEventListener('click', openSidebar);
        if (closeSidebarBtn) closeSidebarBtn.addEventListener('click', closeSidebar);
        if (toggleSidebarDesktopBtn) toggleSidebarDesktopBtn.addEventListener('click', toggleSidebarDesktop);
        if (sidebarOverlay) sidebarOverlay.addEventListener('click', closeSidebar);

        // Close sidebar on window resize if desktop
        window.addEventListener('resize', () => {
            if (window.innerWidth >= 1024) {
                closeSidebar();
            }
        });

        // Updated Auto Active Navigation Script - Enhanced Version
        $(document).ready(function () {
            // Get current controller and action from the page
            var currentController = '@ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower()';
            var currentAction = '@ViewContext.RouteData.Values["action"]?.ToString()?.ToLower()';
            var currentPath = window.location.pathname.toLowerCase();

            console.log('Current Controller:', currentController);
            console.log('Current Action:', currentAction);
            console.log('Current Path:', currentPath);

            // Remove active classes from all sidebar items first
            $('.sidebar-item').removeClass('text-primary bg-blue-50').addClass('text-gray-600');

            // Enhanced controller-action mapping for better matching
            var controllerActionMappings = {
                // Dashboard mappings
                'account-dashboard': 'dashboard',
                'admin-dashboard': 'admin-panel',

                // Admin mappings
                'admin-usermanagement': 'user-management',
                'admin-createuser': 'create-user',
                'admin-systemsettings': 'system-settings',
                'admin-userroles': 'user-roles',

                // Employee mappings
                'employee-index': 'employee-management',
                'employee-create': 'add-employee',

                // Vendor mappings
                'vendor-index': 'vendor-management',
                'vendor-create': 'add-vendor',

                // Lease mappings
                'lease-index': 'lease-management',
                'lease-create': 'create-lease',

                // Property mappings
                'property-index': 'property-management',

                // Payment mappings
                'payment-monthlyrent': 'monthly-rent',
                'payment-brokerage': 'brokerage-payment',
                'payment-securitydeposit': 'security-deposit',

                // Finance mappings
                'finance-income': 'income-tracking',
                'finance-expenses': 'expense-management',
                'finance-invoices': 'invoice-management',

                // Maintenance mappings
                'maintenance-requests': 'maintenance-requests',
                'maintenance-schedule': 'maintenance-schedule',
                'maintenance-history': 'maintenance-history',

                // Communication mappings
                'communication-messages': 'messages',
                'communication-notifications': 'notifications',
                'communication-announcements': 'announcements',

                // Reports mappings
                'reports-mis': 'mis-reports',
                'reports-financial': 'financial-reports',
                'reports-occupancy': 'occupancy-reports',
                'reports-analytics': 'analytics-dashboard',
                'reports-export': 'data-export',

                // Settings mappings
                'account-profile': 'my-profile',
                'account-changepassword': 'change-password',
                'settings-preferences': 'preferences',

                // Help mappings
                'help-documentation': 'documentation',
                'help-support': 'support',
                'help-feedback': 'feedback'
            };

            // Icon-based fallback mapping for controller matching
            var controllerIconMappings = {
                'account': ['ri-dashboard-line', 'ri-user-3-line', 'ri-lock-password-line'],
                'admin': ['ri-team-line', 'ri-user-add-line', 'ri-settings-3-line', 'ri-settings-4-line', 'ri-user-settings-line'],
                'employee': ['ri-user-line', 'ri-user-add-2-line'],
                'vendor': ['ri-store-line', 'ri-store-add-line'],
                'lease': ['ri-file-list-line', 'ri-file-add-line'],
                'property': ['ri-building-line'],
                'payment': ['ri-money-dollar-circle-line', 'ri-exchange-dollar-line', 'ri-safe-2-line'],
                'finance': ['ri-line-chart-line', 'ri-money-dollar-box-line', 'ri-bill-line', 'ri-funds-line'],
                'maintenance': ['ri-tools-line', 'ri-calendar-todo-line', 'ri-history-line'],
                'communication': ['ri-message-2-line', 'ri-notification-2-line', 'ri-megaphone-line'],
                'reports': ['ri-file-chart-line', 'ri-funds-line', 'ri-home-3-line', 'ri-bar-chart-2-line', 'ri-download-cloud-line'],
                'settings': ['ri-settings-2-line'],
                'help': ['ri-book-open-line', 'ri-customer-service-2-line', 'ri-feedback-line']
            };

            // Function to set active navigation
            function setActiveNavigation() {
                var matchFound = false;

                // Method 1: Direct controller-action matching with data-nav attribute
                var targetNav = controllerActionMappings[currentController + '-' + currentAction];
                if (targetNav) {
                    $('.sidebar-item[data-nav="' + targetNav + '"]').each(function () {
                        var $this = $(this);
                        $this.removeClass('text-gray-600 hover:bg-gray-50')
                            .addClass('text-primary bg-blue-50');
                        matchFound = true;
                        console.log('Active navigation set by controller-action mapping:', targetNav);
                        return false; // Break the loop
                    });
                }

                // Method 2: Direct asp-controller and asp-action matching
                if (!matchFound) {
                    $('.sidebar-item').each(function () {
                        var $this = $(this);
                        var linkController = $this.attr('asp-controller')?.toLowerCase();
                        var linkAction = $this.attr('asp-action')?.toLowerCase();

                        if (linkController === currentController && linkAction === currentAction) {
                            $this.removeClass('text-gray-600 hover:bg-gray-50')
                                .addClass('text-primary bg-blue-50');
                            matchFound = true;
                            console.log('Active navigation set by asp attributes:', linkController + '-' + linkAction);
                            return false; // Break the loop
                        }
                    });
                }

                // Method 3: URL path matching
                if (!matchFound && currentPath !== '/') {
                    $('.sidebar-item').each(function () {
                        var $this = $(this);
                        var href = $this.attr('href');

                        if (href && href !== '#' && href !== '/') {
                            var linkPath = href.toLowerCase();
                            if (currentPath === linkPath ||
                                (linkPath.length > 1 && currentPath.includes(linkPath))) {
                                $this.removeClass('text-gray-600 hover:bg-gray-50')
                                    .addClass('text-primary bg-blue-50');
                                matchFound = true;
                                console.log('Active navigation set by URL path:', linkPath);
                                return false; // Break the loop
                            }
                        }
                    });
                }

                // Method 4: Icon-based controller matching (fallback)
                if (!matchFound && controllerIconMappings[currentController]) {
                    var controllerIcons = controllerIconMappings[currentController];

                    $('.sidebar-item').each(function () {
                        var $this = $(this);
                        var $icon = $this.find('i');

                        for (var i = 0; i < controllerIcons.length; i++) {
                            if ($icon.hasClass(controllerIcons[i])) {
                                $this.removeClass('text-gray-600 hover:bg-gray-50')
                                    .addClass('text-primary bg-blue-50');
                                matchFound = true;
                                console.log('Active navigation set by icon matching:', controllerIcons[i]);
                                return false; // Break both loops
                            }
                        }

                        if (matchFound) return false;
                    });
                }

                // Method 5: Partial text matching for complex scenarios
                if (!matchFound) {
                    var pathSegments = currentPath.split('/').filter(segment => segment.length > 0);

                    $('.sidebar-item').each(function () {
                        var $this = $(this);
                        var navText = $this.find('.sidebar-text').text().trim().toLowerCase();
                        var dataNav = $this.attr('data-nav');

                        // Check if any path segment matches navigation text or data-nav
                        for (var i = 0; i < pathSegments.length; i++) {
                            var segment = pathSegments[i];

                            if ((navText.includes(segment) || (dataNav && dataNav.includes(segment))) ||
                                (segment.includes(navText.replace(' ', '')) && navText.length > 3) ||
                                (dataNav && segment.includes(dataNav.replace('-', '')))) {
                                $this.removeClass('text-gray-600 hover:bg-gray-50')
                                    .addClass('text-primary bg-blue-50');
                                matchFound = true;
                                console.log('Active navigation set by partial text/segment matching:', navText || dataNav);
                                return false; // Break the loop
                            }
                        }
                    });
                }

                // Method 6: Special case handling for dashboard routes
                if (!matchFound && (currentPath === '/' || currentPath === '/home' || currentPath.includes('dashboard'))) {
                    $('.sidebar-item[data-nav="dashboard"]').first().each(function () {
                        var $this = $(this);
                        $this.removeClass('text-gray-600 hover:bg-gray-50')
                            .addClass('text-primary bg-blue-50');
                        console.log('Active navigation set for dashboard (special case)');
                    });
                }

                // Log if no match was found for debugging
                if (!matchFound) {
                    console.log('No navigation match found for:', currentController + '/' + currentAction, 'Path:', currentPath);
                }
            }

            // Set active navigation on page load
            setActiveNavigation();

            // Optional: Handle dynamic content loading (for SPA scenarios)
            $(document).on('pjax:complete ajaxComplete', function () {
                setTimeout(setActiveNavigation, 100);
            });

            // Handle browser back/forward navigation
            $(window).on('popstate', function () {
                setTimeout(setActiveNavigation, 100);
            });
        });

        // Utility functions for manual navigation activation
        window.RentManagementNavigation = {
            // Set active navigation by data-nav attribute
            setActiveByNav: function (navAttribute) {
                $('.sidebar-item').removeClass('text-primary bg-blue-50').addClass('text-gray-600');
                $('.sidebar-item[data-nav="' + navAttribute + '"]').removeClass('text-gray-600 hover:bg-gray-50')
                    .addClass('text-primary bg-blue-50');
            },

            // Set active navigation by controller and action
            setActiveByRoute: function (controller, action) {
                $('.sidebar-item').removeClass('text-primary bg-blue-50').addClass('text-gray-600');

                $('.sidebar-item').each(function () {
                    var $this = $(this);
                    var linkController = $this.attr('asp-controller')?.toLowerCase();
                    var linkAction = $this.attr('asp-action')?.toLowerCase();

                    if (linkController === controller.toLowerCase() && linkAction === action.toLowerCase()) {
                        $this.removeClass('text-gray-600 hover:bg-gray-50')
                            .addClass('text-primary bg-blue-50');
                        return false;
                    }
                });
            },

            // Clear all active states
            clearActive: function () {
                $('.sidebar-item').removeClass('text-primary bg-blue-50').addClass('text-gray-600');
            },

            // Get currently active navigation
            getActive: function () {
                var $active = $('.sidebar-item.text-primary');
                return $active.length > 0 ? $active.attr('data-nav') || $active.find('.sidebar-text').text().trim() : null;
            }
        };

        // Auto-hide alerts after 5 seconds
        document.querySelectorAll('[role="alert"]').forEach(alert => {
            setTimeout(() => {
                if (alert.parentElement) {
                    alert.style.opacity = '0';
                    alert.style.transform = 'translateX(100%)';
                    setTimeout(() => alert.remove(), 300);
                }
            }, 5000);
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>