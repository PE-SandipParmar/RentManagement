@model MonthlyRentPayment
@{
    ViewData["Title"] = "Create Monthly Rent Payment";
}
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<style>
    .select2-container--default .select2-selection--single {
        height: 42px;
        border: 1px solid #d1d5db; 
        border-radius: 0.375rem; 
        padding: 6px 12px;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        color: #374151; 
        line-height: 28px;
    }

    .select2-container--default .select2-selection--single .select2-selection__arrow {
        height: 40px;
    }
    
    .loading-spinner {
        display: none;
        border: 3px solid #f3f3f3;
        border-top: 3px solid #3498db;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        animation: spin 1s linear infinite;
        display: inline-block;
        margin-left: 10px;
    }
    
</style>

<div class="max-w-4xl mx-auto">
    <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
            <h1 class="text-2xl font-bold text-gray-900">Create Monthly Rent Payment</h1>
        </div>

        <form asp-action="Create" method="post" class="px-6 py-4 space-y-6">
            <div asp-validation-summary="ModelOnly" class="text-red-600"></div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label asp-for="EmployeeId" class="block text-sm font-medium text-gray-700 mb-1">
                        Name (Employee) <span class="text-red-500">*</span>
                    </label>
                    <select asp-for="EmployeeId" id="EmployeeId" class="searchable-dropdown w-full px-3 py-2 border border-gray-300 rounded-md"
                            asp-items="@(new SelectList(ViewBag.Employees, "Id", "Name"))">
                        <option value="">Select Employee</option>
                    </select>
                    <span class="loading-spinner" id="employeeLoader"></span>
                    <span asp-validation-for="EmployeeId" class="text-red-500 text-sm"></span>
                </div>
                
                <div>
                    <label asp-for="VendorId" class="block text-sm font-medium text-gray-700 mb-1">
                        Owner's Name <span class="text-red-500">*</span>
                    </label>
                    <select asp-for="VendorId" id="VendorId" class="searchable-dropdown w-full px-3 py-2 border border-gray-300 rounded-md" disabled>
                        <option value="">Select Vendor</option>
                    </select>
                    <span class="loading-spinner" id="vendorLoader"></span>
                    <span asp-validation-for="VendorId" class="text-red-500 text-sm"></span>
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label asp-for="LeaseId" class="block text-sm font-medium text-gray-700 mb-1">
                        Lease Ref. <span class="text-red-500">*</span>
                    </label>
                    <select asp-for="LeaseId" id="LeaseId" class="searchable-dropdown w-full px-3 py-2 border border-gray-300 rounded-md" disabled>
                        <option value="">Select Lease</option>
                    </select>
                    <span class="loading-spinner" id="leaseLoader"></span>
                    <span asp-validation-for="LeaseId" class="text-red-500 text-sm"></span>
                </div>
                
                <div>
                    <label asp-for="PaymentMonth" class="block text-sm font-medium text-gray-700 mb-1">
                        Payment Month <span class="text-red-500">*</span>
                    </label>
                    <input asp-for="PaymentMonth" id="PaymentMonth" type="month" class="w-full px-3 py-2 border border-gray-300 rounded-md" />
                    <span asp-validation-for="PaymentMonth" class="text-red-500 text-sm"></span>
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label asp-for="MonthlyLeaseAmount" class="block font-medium text-gray-700 mb-1">
                        Monthly Lease Amount <span class="text-red-500">*</span>
                    </label>
                    <input asp-for="MonthlyLeaseAmount" id="MonthlyLeaseAmount" class="w-full px-3 py-2 border border-gray-300 rounded-md" type="number" step="0.01" readonly />
                    <span asp-validation-for="MonthlyLeaseAmount" class="text-red-500 text-sm"></span>
                </div>
                
                <div>
                    <label asp-for="LeaseEndDate" class="block font-medium text-gray-700 mb-1">
                        Lease End Date <span class="text-red-500">*</span>
                    </label>
                    <input asp-for="LeaseEndDate" id="LeaseEndDate" type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md" readonly />
                    <span asp-validation-for="LeaseEndDate" class="text-red-500 text-sm"></span>
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label asp-for="TDSApplicableId" class="block font-medium text-gray-700 mb-1">
                        TDS Applicable <span class="text-red-500">*</span>
                    </label>
                    <select asp-for="TDSApplicableId" id="TDSApplicableId" class="searchable-dropdown w-full px-3 py-2 border border-gray-300 rounded-md">
                        <option value="">Select TDS Applicable</option>
                        @foreach (var item in ViewBag.TDSApplicable)
                        {
                            <option value="@item.Id" data-rate="@item.Rate">@item.Name</option>
                        }
                    </select>
                    <span asp-validation-for="TDSApplicableId" class="text-red-500 text-sm"></span>
                </div>
                
                <div>
                    <label asp-for="TDSRate" class="block font-medium text-gray-700 mb-1">TDS Rate (%)</label>
                    <input asp-for="TDSRate" id="TDSRate" class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100" readonly />
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label asp-for="TDSAmount" class="block font-medium text-gray-700 mb-1">TDS Amount</label>
                    <input asp-for="TDSAmount" id="TDSAmount" class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100" readonly />
                </div>
                
                <div>
                    <label asp-for="NetPayableAmount" class="block font-medium text-gray-700 mb-1">Net Payable Amount</label>
                    <input asp-for="NetPayableAmount" id="NetPayableAmount" class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100" readonly />
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label asp-for="PaymentStatus" class="block font-medium text-gray-700 mb-1">Payment Status</label>
                    <select asp-for="PaymentStatus" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                        <option value="Pending">Pending</option>
                        <option value="Paid">Paid</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
                
                <div>
                    <label asp-for="DSCApprovalStatus" class="block font-medium text-gray-700 mb-1">DSC Approval Status</label>
                    <select asp-for="DSCApprovalStatus" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                        <option value="Pending">Pending</option>
                        <option value="Approved">Approved</option>
                        <option value="Rejected">Rejected</option>
                    </select>
                </div>
            </div>
            
            <div>
                <label asp-for="Remark" class="block font-medium text-gray-700 mb-1">Remark</label>
                <textarea asp-for="Remark" class="w-full px-3 py-2 border border-gray-300 rounded-md" rows="3"></textarea>
                <span asp-validation-for="Remark" class="text-red-500 text-sm"></span>
            </div>
            
            <div class="flex justify-end space-x-3 pt-4 border-t">
                <a href="@Url.Action("Index")" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300">
                    Cancel
                </a>
                <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700">
                    Create Payment
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    
    <script>
        $(document).ready(function () {
            // Initialize Select2
            $('.searchable-dropdown').select2({
                placeholder: "Select an option",
                allowClear: true,
                width: '100%'
            });
            
            // Employee change event
            $('#EmployeeId').on('change', function() {
                var employeeId = $(this).val();
                
                // Reset dependent fields
                $('#VendorId').empty().append('<option value="">Select Vendor</option>').prop('disabled', true).trigger('change');
                $('#LeaseId').empty().append('<option value="">Select Lease</option>').prop('disabled', true).trigger('change');
                clearLeaseDetails();

                if (employeeId) {
                    $('#employeeLoader').show();
                    
                    // Fetch vendors for this employee
                    $.ajax({
                        url: '@Url.Action("GetVendorsByEmployee", "MonthlyRentPayment")',
                        type: 'GET',
                        data: { employeeId: employeeId },
                        success: function(response) {
                            $('#employeeLoader').hide();
                            
                            if (response.success && response.vendors && response.vendors.length > 0) {
                                $('#VendorId').prop('disabled', false);
                                
                                $.each(response.vendors, function(index, vendor) {
                                    $('#VendorId').append(new Option(vendor.name, vendor.id));
                                });
                                
                                // If only one vendor, auto-select it
                                if (response.vendors.length === 1) {
                                    $('#VendorId').val(response.vendors[0].id).trigger('change');
                                }
                            } else {
                                showAlert('No vendors found for the selected employee', 'warning');
                            }
                        },
                        error: function() {
                            $('#employeeLoader').hide();
                            showAlert('Error loading vendors', 'error');
                        }
                    });
                }
            });
            
            // Vendor change event
            $('#VendorId').on('change', function() {
                var vendorId = $(this).val();
                var employeeId = $('#EmployeeId').val();
              
                // Reset lease field
                $('#LeaseId').empty().append('<option value="">Select Lease</option>').prop('disabled', true).trigger('change');
                clearLeaseDetails();
                
                if (vendorId && employeeId) {
                    $('#vendorLoader').show();
                    
                    // Fetch leases for this employee and vendor
                    $.ajax({
                        url: '@Url.Action("GetLeasesByEmployeeAndVendor", "MonthlyRentPayment")',
                        type: 'GET',
                        data: { employeeId: employeeId, vendorId: vendorId },
                        success: function(response) {
                            $('#vendorLoader').hide();
                            
                            if (response.success && response.leases && response.leases.length > 0) {
                                $('#LeaseId').prop('disabled', false);
                                
                                $.each(response.leases, function(index, lease) {
                                    var optionText = lease.refNo;
                                    if (lease.monthlyRentPayable) {
                                        optionText += ' - ₹' + formatNumber(lease.monthlyRentPayable);
                                    }
                                    $('#LeaseId').append(new Option(optionText, lease.id));
                                });
                                
                                // If only one lease, auto-select it
                                if (response.leases.length === 1) {
                                    $('#LeaseId').val(response.leases[0].id).trigger('change');
                                    
                                }
                            } else {
                                showAlert('No active leases found for the selected employee and vendor', 'warning');
                            }
                        },
                        error: function() {
                            $('#vendorLoader').hide();
                            showAlert('Error loading leases', 'error');
                        }
                    });
                }
            });
            
            // Lease change event
            $('#LeaseId').on('change', function() {
                var leaseId = $(this).val();
                
                if (leaseId) {
                    $('#leaseLoader').show();
                    
                    // Fetch lease details
                    $.ajax({
                        url: '@Url.Action("GetLeasesDetails", "MonthlyRentPayment")',
                        type: 'GET',
                        data: { id: leaseId },
                        success: function(response) {
                            $('#leaseLoader').hide();
                            
                            if (response.success && response.lease) {
                                console.log(response);

                                // Populate lease details
                                $('#MonthlyLeaseAmount').val(response.lease.monthlyRentPayable || 0);
                                $('#LeaseEndDate').val(response.lease.endDate);
                                
                                // Set current month as default payment month
                                var currentDate = new Date();
                                var month = (currentDate.getMonth() + 1).toString().padStart(2, '0');
                                var year = currentDate.getFullYear();
                                $('#PaymentMonth').val(year + '-' + month);
                                
                                // Trigger TDS calculation
                                calculateTDS();
                            } else {
                                showAlert('Could not load lease details', 'error');
                            }
                        },
                        error: function() {
                            $('#leaseLoader').hide();
                            showAlert('Error loading lease details', 'error');
                        }
                    });
                }
            });
            
            // TDS change event
            $('#TDSApplicableId').on('change', function() {
                var rate = $(this).find(':selected').data('rate') || 0;
                $('#TDSRate').val(rate);
                calculateTDS();
            });
            
            // Calculate TDS and Net Amount
            function calculateTDS() {
                var amount = parseFloat($('#MonthlyLeaseAmount').val()) || 0;
                var tdsRate = parseFloat($('#TDSRate').val()) || 0;
                
                var tdsAmount = (amount * tdsRate / 100);
                var netAmount = amount - tdsAmount;
                
                $('#TDSAmount').val(tdsAmount.toFixed(2));
                $('#NetPayableAmount').val(netAmount.toFixed(2));
            }
            
            // Clear lease details
            function clearLeaseDetails() {
                $('#MonthlyLeaseAmount').val('');
                $('#LeaseEndDate').val('');
                $('#TDSRate').val('');
                $('#TDSAmount').val('');
                $('#NetPayableAmount').val('');
            }
            
            // Show alert message
            function showAlert(message, type) {
                var alertClass = type === 'error' ? 'alert-danger' : 'alert-warning';
                var alertHtml = '<div class="alert ' + alertClass + ' alert-dismissible fade show" role="alert">' +
                    message +
                    '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                    '<span aria-hidden="true">&times;</span></button></div>';
                
                $('#alertContainer').html(alertHtml);
                
                setTimeout(function() {
                    $('.alert').fadeOut();
                }, 5000);
            }
            
            // Format number with commas
            function formatNumber(num) {
                return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }
        });
    </script>
}